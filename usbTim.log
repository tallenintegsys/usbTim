yosys -s "usbTim.ys"

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.16+61 (git sha1 UNKNOWN, clang 14.0.0-1ubuntu1 -fPIC -Os)


-- Executing script file `usbTim.ys' --

1. Executing Verilog-2005 frontend: top.v
Parsing Verilog input from `top.v' to AST representation.
Warning: Yosys has only limited support for tri-state logic at the moment. (top.v:28)
Warning: Yosys has only limited support for tri-state logic at the moment. (top.v:29)
Generating RTLIL representation for module `\top'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: usb_ep_banked.v
Parsing Verilog input from `usb_ep_banked.v' to AST representation.
Generating RTLIL representation for module `\usb_ep_banked'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: usb_ep.v
Parsing Verilog input from `usb_ep.v' to AST representation.
Generating RTLIL representation for module `\usb_ep'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: usb_recv.v
Parsing Verilog input from `usb_recv.v' to AST representation.
Generating RTLIL representation for module `\usb_recv_sm'.
Generating RTLIL representation for module `\usb_recv'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: usb_tx.v
Parsing Verilog input from `usb_tx.v' to AST representation.
Generating RTLIL representation for module `\usb_tx'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: usb_utils.v
Parsing Verilog input from `usb_utils.v' to AST representation.
Generating RTLIL representation for module `\usb_crc5'.
Generating RTLIL representation for module `\usb_crc16'.
Generating RTLIL representation for module `\usb_clk_recovery'.
Generating RTLIL representation for module `\usb_bit_destuff'.
Generating RTLIL representation for module `\usb_sync_detect'.
Generating RTLIL representation for module `\usb_reset_detect'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: usb.v
Parsing Verilog input from `usb.v' to AST representation.
Generating RTLIL representation for module `\usb'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: utils.v
Parsing Verilog input from `utils.v' to AST representation.
Generating RTLIL representation for module `\multisample3'.
Note: Assuming pure combinatorial block at utils.v:9.1-20.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\multisample5'.
Note: Assuming pure combinatorial block at utils.v:37.1-72.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\nrzi_decode'.
Successfully finished Verilog frontend.

9. Executing SYNTH_ECP5 pass.

9.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\$__ABC9_LUT5'.
Generating RTLIL representation for module `\$__ABC9_LUT6'.
Generating RTLIL representation for module `\$__ABC9_LUT7'.
Generating RTLIL representation for module `\L6MUX21'.
Generating RTLIL representation for module `\CCU2C'.
Generating RTLIL representation for module `\TRELLIS_RAM16X2'.
Generating RTLIL representation for module `\PFUMX'.
Generating RTLIL representation for module `\TRELLIS_DPR16X4'.
Generating RTLIL representation for module `\DPR16X4C'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\TRELLIS_FF'.
Generating RTLIL representation for module `\TRELLIS_IO'.
Generating RTLIL representation for module `\INV'.
Generating RTLIL representation for module `\TRELLIS_SLICE'.
Generating RTLIL representation for module `\DP16KD'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Successfully finished Verilog frontend.

9.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_bb.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_bb.v' to AST representation.
Generating RTLIL representation for module `\MULT18X18D'.
Generating RTLIL representation for module `\ALU54B'.
Generating RTLIL representation for module `\EHXPLLL'.
Generating RTLIL representation for module `\DTR'.
Generating RTLIL representation for module `\OSCG'.
Generating RTLIL representation for module `\USRMCLK'.
Generating RTLIL representation for module `\JTAGG'.
Generating RTLIL representation for module `\DELAYF'.
Generating RTLIL representation for module `\DELAYG'.
Generating RTLIL representation for module `\IDDRX1F'.
Generating RTLIL representation for module `\IDDRX2F'.
Generating RTLIL representation for module `\IDDR71B'.
Generating RTLIL representation for module `\IDDRX2DQA'.
Generating RTLIL representation for module `\ODDRX1F'.
Generating RTLIL representation for module `\ODDRX2F'.
Generating RTLIL representation for module `\ODDR71B'.
Generating RTLIL representation for module `\OSHX2A'.
Generating RTLIL representation for module `\ODDRX2DQA'.
Generating RTLIL representation for module `\ODDRX2DQSB'.
Generating RTLIL representation for module `\TSHX2DQA'.
Generating RTLIL representation for module `\TSHX2DQSA'.
Generating RTLIL representation for module `\DQSBUFM'.
Generating RTLIL representation for module `\DDRDLLA'.
Generating RTLIL representation for module `\DLLDELD'.
Generating RTLIL representation for module `\CLKDIVF'.
Generating RTLIL representation for module `\ECLKSYNCB'.
Generating RTLIL representation for module `\ECLKBRIDGECS'.
Generating RTLIL representation for module `\DCCA'.
Generating RTLIL representation for module `\DCSC'.
Generating RTLIL representation for module `\DCUA'.
Generating RTLIL representation for module `\EXTREFB'.
Generating RTLIL representation for module `\PCSCLKDIV'.
Generating RTLIL representation for module `\PUR'.
Generating RTLIL representation for module `\GSR'.
Generating RTLIL representation for module `\SGSR'.
Generating RTLIL representation for module `\PDPW16KD'.
Successfully finished Verilog frontend.

9.3. Executing HIERARCHY pass (managing design hierarchy).

9.3.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \usb
Used module:         \usb_tx
Used module:             \usb_crc16
Used module:         \usb_recv
Used module:             \usb_recv_sm
Used module:                 \usb_crc5
Used module:             \usb_sync_detect
Used module:             \usb_reset_detect
Used module:             \usb_bit_destuff
Used module:             \nrzi_decode
Used module:             \usb_clk_recovery
Used module:             \multisample5
Used module:             \multisample3

9.3.2. Analyzing design hierarchy..
Top module:  \top
Used module:     \usb
Used module:         \usb_tx
Used module:             \usb_crc16
Used module:         \usb_recv
Used module:             \usb_recv_sm
Used module:                 \usb_crc5
Used module:             \usb_sync_detect
Used module:             \usb_reset_detect
Used module:             \usb_bit_destuff
Used module:             \nrzi_decode
Used module:             \usb_clk_recovery
Used module:             \multisample5
Used module:             \multisample3
Removing unused module `\usb_ep'.
Removing unused module `\usb_ep_banked'.
Removed 2 unused modules.

9.4. Executing PROC pass (convert processes to netlists).

9.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$364'.
Cleaned up 1 empty switch.

9.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$471 in module TRELLIS_FF.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$423 in module DPR16X4C.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$365 in module TRELLIS_DPR16X4.
Removed 1 dead cases from process $proc$utils.v:37$243 in module multisample5.
Marked 1 switch rules as full_case in process $proc$utils.v:37$243 in module multisample5.
Removed 1 dead cases from process $proc$utils.v:9$241 in module multisample3.
Marked 1 switch rules as full_case in process $proc$utils.v:9$241 in module multisample3.
Marked 12 switch rules as full_case in process $proc$usb.v:137$189 in module usb.
Marked 1 switch rules as full_case in process $proc$usb.v:90$185 in module usb.
Marked 2 switch rules as full_case in process $proc$usb_utils.v:152$181 in module usb_reset_detect.
Marked 1 switch rules as full_case in process $proc$usb_utils.v:130$177 in module usb_sync_detect.
Marked 1 switch rules as full_case in process $proc$usb_utils.v:107$170 in module usb_bit_destuff.
Marked 2 switch rules as full_case in process $proc$usb_utils.v:80$164 in module usb_clk_recovery.
Marked 1 switch rules as full_case in process $proc$usb_utils.v:57$161 in module usb_crc16.
Marked 1 switch rules as full_case in process $proc$usb_utils.v:50$156 in module usb_crc16.
Marked 1 switch rules as full_case in process $proc$usb_utils.v:22$153 in module usb_crc5.
Marked 1 switch rules as full_case in process $proc$usb_utils.v:15$150 in module usb_crc5.
Marked 2 switch rules as full_case in process $proc$usb_tx.v:111$127 in module usb_tx.
Marked 2 switch rules as full_case in process $proc$usb_tx.v:95$124 in module usb_tx.
Marked 3 switch rules as full_case in process $proc$usb_tx.v:53$120 in module usb_tx.
Marked 1 switch rules as full_case in process $proc$usb_tx.v:18$101 in module usb_tx.
Marked 1 switch rules as full_case in process $proc$usb_recv.v:162$93 in module usb_recv.
Marked 6 switch rules as full_case in process $proc$usb_recv.v:64$86 in module usb_recv_sm.
Marked 1 switch rules as full_case in process $proc$usb_recv.v:21$81 in module usb_recv_sm.
Removed a total of 2 dead cases.

9.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 6 redundant assignments.
Promoted 53 assignments to connections.

9.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$472'.
  Set init value: \Q = 1'0
Found init rule in `\top.$proc$top.v:47$14'.
  Set init value: \reset_sr = 1'1
Found init rule in `\top.$proc$top.v:33$13'.
  Set init value: \counter = 27'000000000000000000000000000

9.4.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst_n in `\usb.$proc$usb.v:137$189'.
Found async reset \rst_n in `\usb_reset_detect.$proc$usb_utils.v:152$181'.
Found async reset \rst_n in `\usb_sync_detect.$proc$usb_utils.v:130$177'.
Found async reset \rst_n in `\usb_bit_destuff.$proc$usb_utils.v:107$170'.
Found async reset \rst_n in `\usb_clk_recovery.$proc$usb_utils.v:80$164'.
Found async reset \rst_n in `\usb_crc16.$proc$usb_utils.v:57$161'.
Found async reset \rst_n in `\usb_crc5.$proc$usb_utils.v:22$153'.
Found async reset \rst_n in `\usb_tx.$proc$usb_tx.v:111$127'.
Found async reset \rst_n in `\usb_tx.$proc$usb_tx.v:53$120'.
Found async reset \rst_n in `\usb_tx.$proc$usb_tx.v:18$101'.
Found async reset \rst_n in `\usb_recv_sm.$proc$usb_recv.v:64$86'.

9.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$472'.
Creating decoders for process `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$471'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$446'.
Creating decoders for process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$423'.
     1/3: $1$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$422_EN[3:0]$429
     2/3: $1$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$422_DATA[3:0]$428
     3/3: $1$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$422_ADDR[3:0]$427
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$389'.
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$365'.
     1/3: $1$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$363_EN[3:0]$371
     2/3: $1$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$363_DATA[3:0]$370
     3/3: $1$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$363_ADDR[3:0]$369
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$364'.
Creating decoders for process `\nrzi_decode.$proc$utils.v:91$246'.
     1/1: $0\prev_i[0:0]
Creating decoders for process `\multisample5.$proc$utils.v:74$244'.
Creating decoders for process `\multisample5.$proc$utils.v:37$243'.
     1/1: $1\out[0:0]
Creating decoders for process `\multisample3.$proc$utils.v:22$242'.
Creating decoders for process `\multisample3.$proc$utils.v:9$241'.
     1/1: $1\out[0:0]
Creating decoders for process `\usb.$proc$usb.v:137$189'.
     1/12: $0\tx_transmit[0:0]
     2/12: $0\data_strobe[0:0]
     3/12: $0\success[0:0]
     4/12: $0\handshake_latch[1:0]
     5/12: $0\token_timeout[6:0]
     6/12: $0\tx_enable_crc16[0:0]
     7/12: $0\endpoint[3:0]
     8/12: $0\transaction_active[0:0]
     9/12: $0\tx_data[7:0]
    10/12: $0\state[2:0]
    11/12: $0\setup[0:0]
    12/12: $0\direction_in[0:0]
Creating decoders for process `\usb.$proc$usb.v:90$185'.
     1/5: $0\recv_queue_1_valid[0:0]
     2/5: $0\recv_queue_0_valid[0:0]
     3/5: $0\recv_queue_1[7:0]
     4/5: $0\recv_queue_0[7:0]
     5/5: $0\data_out[7:0]
Creating decoders for process `\usb_reset_detect.$proc$usb_utils.v:152$181'.
     1/1: $0\cntr[18:0]
Creating decoders for process `\usb_sync_detect.$proc$usb_utils.v:130$177'.
     1/1: $0\data[6:0]
Creating decoders for process `\usb_bit_destuff.$proc$usb_utils.v:107$170'.
     1/1: $0\data[6:0]
Creating decoders for process `\usb_clk_recovery.$proc$usb_utils.v:80$164'.
     1/2: $0\cntr[1:0]
     2/2: $0\prev_i[0:0]
Creating decoders for process `\usb_crc16.$proc$usb_utils.v:57$161'.
     1/1: $0\r[15:0]
Creating decoders for process `\usb_crc16.$proc$usb_utils.v:50$156'.
     1/1: $1\next[15:0]
Creating decoders for process `\usb_crc5.$proc$usb_utils.v:22$153'.
     1/1: $0\r[4:0]
Creating decoders for process `\usb_crc5.$proc$usb_utils.v:15$150'.
     1/1: $1\next[4:0]
Creating decoders for process `\usb_tx.$proc$usb_tx.v:124$143'.
     1/1: $0\last_j[0:0]
Creating decoders for process `\usb_tx.$proc$usb_tx.v:111$127'.
     1/1: $0\bit_stuff_counter[2:0]
Creating decoders for process `\usb_tx.$proc$usb_tx.v:95$124'.
     1/2: $0\crc_enabled[0:0]
     2/2: $0\tx_data[8:0]
Creating decoders for process `\usb_tx.$proc$usb_tx.v:53$120'.
     1/1: $0\state[2:0]
Creating decoders for process `\usb_tx.$proc$usb_tx.v:18$101'.
     1/1: $0\tx_clock[1:0]
Creating decoders for process `\usb_recv.$proc$usb_recv.v:162$93'.
     1/1: $0\short_idle_counter[2:0]
Creating decoders for process `\usb_recv_sm.$proc$usb_recv.v:64$86'.
     1/7: $0\state[1:0]
     2/7: $0\clear_shift[0:0]
     3/7: $0\xcrc16_ok[0:0]
     4/7: $0\xcrc5_ok[0:0]
     5/7: $0\xdatastrobe[0:0]
     6/7: $0\xdata[7:0]
     7/7: $0\xpid[3:0]
Creating decoders for process `\usb_recv_sm.$proc$usb_recv.v:28$82'.
     1/1: $0\shift_reg[7:0]
Creating decoders for process `\usb_recv_sm.$proc$usb_recv.v:21$81'.
     1/1: $1\next_shift[8:0]
Creating decoders for process `\top.$proc$top.v:47$14'.
Creating decoders for process `\top.$proc$top.v:33$13'.
Creating decoders for process `\top.$proc$top.v:48$12'.
Creating decoders for process `\top.$proc$top.v:36$9'.

9.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\multisample5.\out' from process `\multisample5.$proc$utils.v:37$243'.
No latch inferred for signal `\multisample3.\out' from process `\multisample3.$proc$utils.v:9$241'.
No latch inferred for signal `\usb_crc16.\next' from process `\usb_crc16.$proc$usb_utils.v:50$156'.
No latch inferred for signal `\usb_crc5.\next' from process `\usb_crc5.$proc$usb_utils.v:15$150'.
No latch inferred for signal `\usb_recv_sm.\next_shift' from process `\usb_recv_sm.$proc$usb_recv.v:21$81'.

9.4.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\TRELLIS_FF.\Q' using process `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$471'.
  created $dff cell `$procdff$1095' with positive edge clock.
Creating register for signal `\DPR16X4C.\i' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$446'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:281$407_EN' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$446'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:281$408_EN' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$446'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:281$409_EN' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$446'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:281$410_EN' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$446'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:281$411_EN' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$446'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:281$412_EN' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$446'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:281$413_EN' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$446'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:281$414_EN' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$446'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:281$415_EN' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$446'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:281$416_EN' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$446'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:281$417_EN' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$446'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:281$418_EN' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$446'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:281$419_EN' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$446'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:281$420_EN' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$446'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:281$421_EN' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$446'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$422_ADDR' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$423'.
  created $dff cell `$procdff$1096' with positive edge clock.
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$422_DATA' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$423'.
  created $dff cell `$procdff$1097' with positive edge clock.
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$422_EN' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$423'.
  created $dff cell `$procdff$1098' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.\i' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$389'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:207$347_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$389'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:207$348_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$389'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:207$349_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$389'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:207$350_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$389'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:207$351_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$389'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:207$352_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$389'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:207$353_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$389'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:207$354_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$389'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:207$355_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$389'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:207$356_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$389'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:207$357_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$389'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:207$358_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$389'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:207$359_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$389'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:207$360_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$389'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:207$361_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$389'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:207$362_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$389'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$363_ADDR' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$365'.
  created $dff cell `$procdff$1099' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$363_DATA' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$365'.
  created $dff cell `$procdff$1100' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$363_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$365'.
  created $dff cell `$procdff$1101' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.\muxwre' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$364'.
  created direct connection (no actual register cell created).
Creating register for signal `\nrzi_decode.\prev_i' using process `\nrzi_decode.$proc$utils.v:91$246'.
  created $dff cell `$procdff$1102' with positive edge clock.
Creating register for signal `\multisample5.\r' using process `\multisample5.$proc$utils.v:74$244'.
  created $dff cell `$procdff$1103' with positive edge clock.
Creating register for signal `\multisample3.\r' using process `\multisample3.$proc$utils.v:22$242'.
  created $dff cell `$procdff$1104' with positive edge clock.
Creating register for signal `\usb.\direction_in' using process `\usb.$proc$usb.v:137$189'.
  created $adff cell `$procdff$1105' with positive edge clock and negative level reset.
Creating register for signal `\usb.\setup' using process `\usb.$proc$usb.v:137$189'.
  created $adff cell `$procdff$1106' with positive edge clock and negative level reset.
Creating register for signal `\usb.\success' using process `\usb.$proc$usb.v:137$189'.
  created $adff cell `$procdff$1107' with positive edge clock and negative level reset.
Creating register for signal `\usb.\state' using process `\usb.$proc$usb.v:137$189'.
  created $adff cell `$procdff$1108' with positive edge clock and negative level reset.
Creating register for signal `\usb.\data_strobe' using process `\usb.$proc$usb.v:137$189'.
  created $adff cell `$procdff$1109' with positive edge clock and negative level reset.
Creating register for signal `\usb.\tx_data' using process `\usb.$proc$usb.v:137$189'.
  created $dff cell `$procdff$1112' with positive edge clock.
Creating register for signal `\usb.\transaction_active' using process `\usb.$proc$usb.v:137$189'.
  created $adff cell `$procdff$1113' with positive edge clock and negative level reset.
Creating register for signal `\usb.\endpoint' using process `\usb.$proc$usb.v:137$189'.
  created $adff cell `$procdff$1114' with positive edge clock and negative level reset.
Creating register for signal `\usb.\tx_transmit' using process `\usb.$proc$usb.v:137$189'.
  created $adff cell `$procdff$1115' with positive edge clock and negative level reset.
Creating register for signal `\usb.\tx_enable_crc16' using process `\usb.$proc$usb.v:137$189'.
  created $adff cell `$procdff$1116' with positive edge clock and negative level reset.
Creating register for signal `\usb.\token_timeout' using process `\usb.$proc$usb.v:137$189'.
  created $adff cell `$procdff$1117' with positive edge clock and negative level reset.
Creating register for signal `\usb.\handshake_latch' using process `\usb.$proc$usb.v:137$189'.
  created $adff cell `$procdff$1118' with positive edge clock and negative level reset.
Creating register for signal `\usb.\data_out' using process `\usb.$proc$usb.v:90$185'.
  created $dff cell `$procdff$1119' with positive edge clock.
Creating register for signal `\usb.\recv_queue_0' using process `\usb.$proc$usb.v:90$185'.
  created $dff cell `$procdff$1120' with positive edge clock.
Creating register for signal `\usb.\recv_queue_1' using process `\usb.$proc$usb.v:90$185'.
  created $dff cell `$procdff$1121' with positive edge clock.
Creating register for signal `\usb.\recv_queue_0_valid' using process `\usb.$proc$usb.v:90$185'.
  created $dff cell `$procdff$1122' with positive edge clock.
Creating register for signal `\usb.\recv_queue_1_valid' using process `\usb.$proc$usb.v:90$185'.
  created $dff cell `$procdff$1123' with positive edge clock.
Creating register for signal `\usb_reset_detect.\cntr' using process `\usb_reset_detect.$proc$usb_utils.v:152$181'.
  created $adff cell `$procdff$1124' with positive edge clock and negative level reset.
Creating register for signal `\usb_sync_detect.\data' using process `\usb_sync_detect.$proc$usb_utils.v:130$177'.
  created $adff cell `$procdff$1125' with positive edge clock and negative level reset.
Creating register for signal `\usb_bit_destuff.\data' using process `\usb_bit_destuff.$proc$usb_utils.v:107$170'.
  created $adff cell `$procdff$1126' with positive edge clock and negative level reset.
Creating register for signal `\usb_clk_recovery.\cntr' using process `\usb_clk_recovery.$proc$usb_utils.v:80$164'.
  created $adff cell `$procdff$1127' with positive edge clock and negative level reset.
Creating register for signal `\usb_clk_recovery.\prev_i' using process `\usb_clk_recovery.$proc$usb_utils.v:80$164'.
  created $adff cell `$procdff$1128' with positive edge clock and negative level reset.
Creating register for signal `\usb_crc16.\r' using process `\usb_crc16.$proc$usb_utils.v:57$161'.
  created $adff cell `$procdff$1129' with positive edge clock and negative level reset.
Creating register for signal `\usb_crc5.\r' using process `\usb_crc5.$proc$usb_utils.v:22$153'.
  created $adff cell `$procdff$1130' with positive edge clock and negative level reset.
Creating register for signal `\usb_tx.\last_j' using process `\usb_tx.$proc$usb_tx.v:124$143'.
  created $dff cell `$procdff$1131' with positive edge clock.
Creating register for signal `\usb_tx.\bit_stuff_counter' using process `\usb_tx.$proc$usb_tx.v:111$127'.
  created $adff cell `$procdff$1132' with positive edge clock and negative level reset.
Creating register for signal `\usb_tx.\tx_data' using process `\usb_tx.$proc$usb_tx.v:95$124'.
  created $dff cell `$procdff$1133' with positive edge clock.
Creating register for signal `\usb_tx.\crc_enabled' using process `\usb_tx.$proc$usb_tx.v:95$124'.
  created $dff cell `$procdff$1134' with positive edge clock.
Creating register for signal `\usb_tx.\state' using process `\usb_tx.$proc$usb_tx.v:53$120'.
  created $adff cell `$procdff$1135' with positive edge clock and negative level reset.
Creating register for signal `\usb_tx.\tx_clock' using process `\usb_tx.$proc$usb_tx.v:18$101'.
  created $adff cell `$procdff$1136' with positive edge clock and negative level reset.
Creating register for signal `\usb_recv.\short_idle_counter' using process `\usb_recv.$proc$usb_recv.v:162$93'.
  created $dff cell `$procdff$1137' with positive edge clock.
Creating register for signal `\usb_recv_sm.\xpid' using process `\usb_recv_sm.$proc$usb_recv.v:64$86'.
  created $adff cell `$procdff$1138' with positive edge clock and negative level reset.
Creating register for signal `\usb_recv_sm.\xdata' using process `\usb_recv_sm.$proc$usb_recv.v:64$86'.
  created $adff cell `$procdff$1139' with positive edge clock and negative level reset.
Creating register for signal `\usb_recv_sm.\xdatastrobe' using process `\usb_recv_sm.$proc$usb_recv.v:64$86'.
  created $adff cell `$procdff$1140' with positive edge clock and negative level reset.
Creating register for signal `\usb_recv_sm.\xcrc5_ok' using process `\usb_recv_sm.$proc$usb_recv.v:64$86'.
  created $adff cell `$procdff$1141' with positive edge clock and negative level reset.
Creating register for signal `\usb_recv_sm.\xcrc16_ok' using process `\usb_recv_sm.$proc$usb_recv.v:64$86'.
  created $adff cell `$procdff$1142' with positive edge clock and negative level reset.
Creating register for signal `\usb_recv_sm.\clear_shift' using process `\usb_recv_sm.$proc$usb_recv.v:64$86'.
  created $adff cell `$procdff$1143' with positive edge clock and negative level reset.
Creating register for signal `\usb_recv_sm.\state' using process `\usb_recv_sm.$proc$usb_recv.v:64$86'.
  created $adff cell `$procdff$1144' with positive edge clock and negative level reset.
Creating register for signal `\usb_recv_sm.\shift_reg' using process `\usb_recv_sm.$proc$usb_recv.v:28$82'.
  created $dff cell `$procdff$1145' with positive edge clock.
Creating register for signal `\top.\reset_sr' using process `\top.$proc$top.v:48$12'.
  created $dff cell `$procdff$1146' with positive edge clock.
Creating register for signal `\top.\counter' using process `\top.$proc$top.v:36$9'.
  created $dff cell `$procdff$1147' with positive edge clock.

9.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

9.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$472'.
Found and cleaned up 2 empty switches in `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$471'.
Removing empty process `TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$471'.
Removing empty process `DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$446'.
Found and cleaned up 1 empty switch in `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$423'.
Removing empty process `TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$389'.
Found and cleaned up 1 empty switch in `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$365'.
Removing empty process `TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$364'.
Found and cleaned up 1 empty switch in `\nrzi_decode.$proc$utils.v:91$246'.
Removing empty process `nrzi_decode.$proc$utils.v:91$246'.
Removing empty process `multisample5.$proc$utils.v:74$244'.
Found and cleaned up 1 empty switch in `\multisample5.$proc$utils.v:37$243'.
Removing empty process `multisample5.$proc$utils.v:37$243'.
Removing empty process `multisample3.$proc$utils.v:22$242'.
Found and cleaned up 1 empty switch in `\multisample3.$proc$utils.v:9$241'.
Removing empty process `multisample3.$proc$utils.v:9$241'.
Found and cleaned up 32 empty switches in `\usb.$proc$usb.v:137$189'.
Removing empty process `usb.$proc$usb.v:137$189'.
Found and cleaned up 2 empty switches in `\usb.$proc$usb.v:90$185'.
Removing empty process `usb.$proc$usb.v:90$185'.
Found and cleaned up 2 empty switches in `\usb_reset_detect.$proc$usb_utils.v:152$181'.
Removing empty process `usb_reset_detect.$proc$usb_utils.v:152$181'.
Found and cleaned up 1 empty switch in `\usb_sync_detect.$proc$usb_utils.v:130$177'.
Removing empty process `usb_sync_detect.$proc$usb_utils.v:130$177'.
Found and cleaned up 1 empty switch in `\usb_bit_destuff.$proc$usb_utils.v:107$170'.
Removing empty process `usb_bit_destuff.$proc$usb_utils.v:107$170'.
Found and cleaned up 1 empty switch in `\usb_clk_recovery.$proc$usb_utils.v:80$164'.
Removing empty process `usb_clk_recovery.$proc$usb_utils.v:80$164'.
Found and cleaned up 1 empty switch in `\usb_crc16.$proc$usb_utils.v:57$161'.
Removing empty process `usb_crc16.$proc$usb_utils.v:57$161'.
Found and cleaned up 1 empty switch in `\usb_crc16.$proc$usb_utils.v:50$156'.
Removing empty process `usb_crc16.$proc$usb_utils.v:50$156'.
Found and cleaned up 1 empty switch in `\usb_crc5.$proc$usb_utils.v:22$153'.
Removing empty process `usb_crc5.$proc$usb_utils.v:22$153'.
Found and cleaned up 1 empty switch in `\usb_crc5.$proc$usb_utils.v:15$150'.
Removing empty process `usb_crc5.$proc$usb_utils.v:15$150'.
Found and cleaned up 1 empty switch in `\usb_tx.$proc$usb_tx.v:124$143'.
Removing empty process `usb_tx.$proc$usb_tx.v:124$143'.
Found and cleaned up 2 empty switches in `\usb_tx.$proc$usb_tx.v:111$127'.
Removing empty process `usb_tx.$proc$usb_tx.v:111$127'.
Found and cleaned up 3 empty switches in `\usb_tx.$proc$usb_tx.v:95$124'.
Removing empty process `usb_tx.$proc$usb_tx.v:95$124'.
Found and cleaned up 8 empty switches in `\usb_tx.$proc$usb_tx.v:53$120'.
Removing empty process `usb_tx.$proc$usb_tx.v:53$120'.
Removing empty process `usb_tx.$proc$usb_tx.v:18$101'.
Found and cleaned up 2 empty switches in `\usb_recv.$proc$usb_recv.v:162$93'.
Removing empty process `usb_recv.$proc$usb_recv.v:162$93'.
Found and cleaned up 9 empty switches in `\usb_recv_sm.$proc$usb_recv.v:64$86'.
Removing empty process `usb_recv_sm.$proc$usb_recv.v:64$86'.
Found and cleaned up 1 empty switch in `\usb_recv_sm.$proc$usb_recv.v:28$82'.
Removing empty process `usb_recv_sm.$proc$usb_recv.v:28$82'.
Found and cleaned up 1 empty switch in `\usb_recv_sm.$proc$usb_recv.v:21$81'.
Removing empty process `usb_recv_sm.$proc$usb_recv.v:21$81'.
Removing empty process `top.$proc$top.v:47$14'.
Removing empty process `top.$proc$top.v:33$13'.
Removing empty process `top.$proc$top.v:48$12'.
Removing empty process `top.$proc$top.v:36$9'.
Cleaned up 77 empty switches.

9.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module nrzi_decode.
Optimizing module multisample5.
<suppressed ~1 debug messages>
Optimizing module multisample3.
<suppressed ~1 debug messages>
Optimizing module usb.
<suppressed ~38 debug messages>
Optimizing module usb_reset_detect.
<suppressed ~2 debug messages>
Optimizing module usb_sync_detect.
Optimizing module usb_bit_destuff.
Optimizing module usb_clk_recovery.
<suppressed ~1 debug messages>
Optimizing module usb_crc16.
Optimizing module usb_crc5.
Optimizing module usb_tx.
<suppressed ~9 debug messages>
Optimizing module usb_recv.
<suppressed ~2 debug messages>
Optimizing module usb_recv_sm.
<suppressed ~2 debug messages>
Optimizing module top.

9.5. Executing FLATTEN pass (flatten design).
Deleting now unused module nrzi_decode.
Deleting now unused module multisample5.
Deleting now unused module multisample3.
Deleting now unused module usb.
Deleting now unused module usb_reset_detect.
Deleting now unused module usb_sync_detect.
Deleting now unused module usb_bit_destuff.
Deleting now unused module usb_clk_recovery.
Deleting now unused module usb_crc16.
Deleting now unused module usb_crc5.
Deleting now unused module usb_tx.
Deleting now unused module usb_recv.
Deleting now unused module usb_recv_sm.
<suppressed ~14 debug messages>

9.6. Executing TRIBUF pass.

9.7. Executing DEMINOUT pass (demote inout ports to input or output).

9.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

9.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 96 unused cells and 347 unused wires.
<suppressed ~108 debug messages>

9.10. Executing CHECK pass (checking for obvious problems).
Checking module top...
Warning: Wire top.\usb0.data_in [7] is used but has no driver.
Warning: Wire top.\usb0.data_in [6] is used but has no driver.
Warning: Wire top.\usb0.data_in [5] is used but has no driver.
Warning: Wire top.\usb0.data_in [4] is used but has no driver.
Warning: Wire top.\usb0.data_in [3] is used but has no driver.
Warning: Wire top.\usb0.data_in [2] is used but has no driver.
Warning: Wire top.\usb0.data_in [1] is used but has no driver.
Warning: Wire top.\usb0.data_in [0] is used but has no driver.
Warning: Wire top.\usb0.data_in_valid is used but has no driver.
Warning: Wire top.\usb0.handshake [1] is used but has no driver.
Warning: Wire top.\usb0.handshake [0] is used but has no driver.
Warning: Wire top.\usb0.usb_address [6] is used but has no driver.
Warning: Wire top.\usb0.usb_address [5] is used but has no driver.
Warning: Wire top.\usb0.usb_address [4] is used but has no driver.
Warning: Wire top.\usb0.usb_address [3] is used but has no driver.
Warning: Wire top.\usb0.usb_address [2] is used but has no driver.
Warning: Wire top.\usb0.usb_address [1] is used but has no driver.
Warning: Wire top.\usb0.usb_address [0] is used but has no driver.
Warning: Wire top.\usb0.data_toggle is used but has no driver.
Warning: Wire top.\usb0.recv.clk_rcvr.rst_n is used but has no driver.
Found and reported 20 problems.

9.11. Executing OPT pass (performing simple optimizations).

9.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

9.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~192 debug messages>
Removed a total of 64 cells.

9.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~46 debug messages>

9.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\usb0.$procmux$694: { $flatten\usb0.$procmux$641_CMP $flatten\usb0.$procmux$660_CMP $flatten\usb0.$procmux$566_CMP $flatten\usb0.$procmux$701_CMP $auto$opt_reduce.cc:134:opt_pmux$1149 }
    New ctrl vector for $pmux cell $flatten\usb0.\recv.\d_filter.$procmux$531: { $auto$opt_reduce.cc:134:opt_pmux$1153 $auto$opt_reduce.cc:134:opt_pmux$1151 }
    New ctrl vector for $pmux cell $flatten\usb0.\recv.\se0_filter.$procmux$498: { $auto$opt_reduce.cc:134:opt_pmux$1157 $auto$opt_reduce.cc:134:opt_pmux$1155 }
    New ctrl vector for $pmux cell $flatten\usb0.$procmux$541: $auto$opt_reduce.cc:134:opt_pmux$1159
  Optimizing cells in module \top.
Performed a total of 4 changes.

9.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

9.11.6. Executing OPT_DFF pass (perform DFF optimizations).

9.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 65 unused wires.
<suppressed ~1 debug messages>

9.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

9.11.9. Rerunning OPT passes. (Maybe there is more to do..)

9.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~47 debug messages>

9.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\usb0.\recv.\sm.$procmux$975: { $flatten\usb0.\recv.\sm.$procmux$1012_CMP $flatten\usb0.\recv.\sm.$procmux$1009_CMP }
  Optimizing cells in module \top.
Performed a total of 1 changes.

9.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

9.11.13. Executing OPT_DFF pass (perform DFF optimizations).

9.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

9.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

9.11.16. Rerunning OPT passes. (Maybe there is more to do..)

9.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~47 debug messages>

9.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

9.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

9.11.20. Executing OPT_DFF pass (perform DFF optimizations).

9.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

9.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

9.11.23. Finished OPT passes. (There is nothing left to do.)

9.12. Executing FSM pass (extract and optimize FSM).

9.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register top.usb0.handshake_latch.
Found FSM state register top.usb0.recv.sm.state.
Found FSM state register top.usb0.state.
Not marking top.usb0.tx.state as FSM state register:
    Users of register don't seem to benefit from recoding.

9.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\usb0.handshake_latch' from module `\top'.
  found $adff cell for state register: $flatten\usb0.$procdff$1118
  root of input selection tree: $flatten\usb0.$0\handshake_latch[1:0]
  found reset state: 2'x (from async reset)
  found ctrl input: $flatten\usb0.$procmux$566_CMP
  found ctrl input: $flatten\usb0.$procmux$641_CMP
  found ctrl input: \usb0.transaction_active
  found ctrl input: $flatten\usb0.$logic_and$usb.v:246$217_Y
  found ctrl input: $flatten\usb0.$logic_and$usb.v:247$220_Y
  found no driver for state signal \usb0.handshake.
  fsm extraction failed: state selection tree is not closed.
Extracting FSM `\usb0.recv.sm.state' from module `\top'.
  found $adff cell for state register: $flatten\usb0.\recv.\sm.$procdff$1144
  root of input selection tree: $flatten\usb0.\recv.\sm.$0\state[1:0]
  found reset state: 2'00 (from async reset)
  found ctrl input: \usb0.recv.strobe
  found ctrl input: $flatten\usb0.\recv.\sm.$procmux$1009_CMP
  found ctrl input: $flatten\usb0.\recv.\sm.$procmux$1012_CMP
  found ctrl input: \usb0.recv.se0
  found ctrl input: \usb0.recv.sm.next_shift [8]
  found ctrl input: $flatten\usb0.\recv.\sm.$eq$usb_recv.v:90$91_Y
  found state code: 2'10
  found state code: 2'11
  found ctrl input: $flatten\usb0.\recv.\sm.$logic_and$usb_recv.v:80$89_Y
  found state code: 2'01
  found ctrl output: $flatten\usb0.\recv.\sm.$procmux$1012_CMP
  found ctrl output: $flatten\usb0.\recv.\sm.$procmux$1009_CMP
  found ctrl output: \usb0.recv.sm.xpacket
  ctrl inputs: { \usb0.recv.sm.next_shift [8] $flatten\usb0.\recv.\sm.$logic_and$usb_recv.v:80$89_Y $flatten\usb0.\recv.\sm.$eq$usb_recv.v:90$91_Y \usb0.recv.strobe \usb0.recv.se0 }
  ctrl outputs: { \usb0.recv.sm.xpacket $flatten\usb0.\recv.\sm.$0\state[1:0] $flatten\usb0.\recv.\sm.$procmux$1009_CMP $flatten\usb0.\recv.\sm.$procmux$1012_CMP }
  transition:       2'00 5'---0- ->       2'00 5'00001
  transition:       2'00 5'-0-1- ->       2'00 5'00001
  transition:       2'00 5'-1-1- ->       2'01 5'00101
  transition:       2'10 5'---0- ->       2'10 5'01000
  transition:       2'10 5'---10 ->       2'10 5'01000
  transition:       2'10 5'---11 ->       2'00 5'00000
  transition:       2'01 5'---0- ->       2'01 5'00110
  transition:       2'01 5'0--10 ->       2'01 5'00110
  transition:       2'01 5'1-010 ->       2'10 5'01010
  transition:       2'01 5'1-110 ->       2'11 5'01110
  transition:       2'01 5'---11 ->       2'00 5'00010
  transition:       2'11 5'---0- ->       2'11 5'11100
  transition:       2'11 5'---10 ->       2'11 5'11100
  transition:       2'11 5'---11 ->       2'00 5'10000
Extracting FSM `\usb0.state' from module `\top'.
  found $adff cell for state register: $flatten\usb0.$procdff$1108
  root of input selection tree: $flatten\usb0.$0\state[2:0]
  found reset state: 3'000 (from async reset)
  found ctrl input: $flatten\usb0.$procmux$550_CMP
  found ctrl input: $flatten\usb0.$procmux$555_CMP
  found ctrl input: $flatten\usb0.$procmux$701_CMP
  found ctrl input: \usb0.tx.send_crc16
  found ctrl input: $flatten\usb0.$procmux$566_CMP
  found ctrl input: $flatten\usb0.$procmux$660_CMP
  found ctrl input: $flatten\usb0.$procmux$641_CMP
  found ctrl input: $flatten\usb0.$logic_and$usb.v:276$227_Y
  found ctrl input: $flatten\usb0.$logic_and$usb.v:256$222_Y
  found ctrl input: $flatten\usb0.$logic_and$usb.v:246$217_Y
  found ctrl input: $flatten\usb0.$procmux$756_CMP
  found state code: 3'010
  found ctrl input: $flatten\usb0.$logic_and$usb.v:287$231_Y
  found ctrl input: \usb0.recv.sm.xpacket
  found state code: 3'110
  found ctrl input: $flatten\usb0.$logic_and$usb.v:247$220_Y
  found state code: 3'011
  found ctrl input: \usb0.data_in_valid
  found ctrl input: $flatten\usb0.$eq$usb.v:258$224_Y
  found state code: 3'101
  found ctrl input: $flatten\usb0.$eq$usb.v:174$196_Y
  found ctrl input: $flatten\usb0.$eq$usb.v:171$195_Y
  found ctrl input: $flatten\usb0.$logic_and$usb.v:215$208_Y
  found ctrl input: $flatten\usb0.$logic_and$usb.v:188$207_Y
  found ctrl input: $flatten\usb0.$procmux$806_CMP
  found state code: 3'100
  found ctrl input: \usb0.recv.xdatastrobe
  found ctrl input: \usb0.recv_queue_1_valid
  found ctrl input: $flatten\usb0.$logic_and$usb.v:174$199_Y
  found ctrl input: $flatten\usb0.$eq$usb.v:176$200_Y
  found state code: 3'111
  found state code: 3'001
  found ctrl output: $flatten\usb0.$procmux$701_CMP
  found ctrl output: $flatten\usb0.$procmux$660_CMP
  found ctrl output: $flatten\usb0.$procmux$641_CMP
  found ctrl output: $flatten\usb0.$procmux$566_CMP
  found ctrl output: $flatten\usb0.$procmux$555_CMP
  found ctrl output: $flatten\usb0.$procmux$550_CMP
  found ctrl output: \usb0.tx.send_crc16
  ctrl inputs: { \usb0.data_in_valid \usb0.recv_queue_1_valid $flatten\usb0.$eq$usb.v:171$195_Y $flatten\usb0.$eq$usb.v:174$196_Y $flatten\usb0.$logic_and$usb.v:174$199_Y $flatten\usb0.$eq$usb.v:176$200_Y $flatten\usb0.$logic_and$usb.v:188$207_Y $flatten\usb0.$logic_and$usb.v:215$208_Y $flatten\usb0.$logic_and$usb.v:246$217_Y $flatten\usb0.$logic_and$usb.v:247$220_Y $flatten\usb0.$logic_and$usb.v:256$222_Y $flatten\usb0.$eq$usb.v:258$224_Y $flatten\usb0.$logic_and$usb.v:276$227_Y $flatten\usb0.$logic_and$usb.v:287$231_Y $flatten\usb0.$procmux$756_CMP $flatten\usb0.$procmux$806_CMP \usb0.recv.sm.xpacket \usb0.recv.xdatastrobe }
  ctrl outputs: { $flatten\usb0.$0\state[2:0] $flatten\usb0.$procmux$550_CMP $flatten\usb0.$procmux$555_CMP $flatten\usb0.$procmux$566_CMP $flatten\usb0.$procmux$641_CMP $flatten\usb0.$procmux$660_CMP $flatten\usb0.$procmux$701_CMP \usb0.tx.send_crc16 }
  transition:      3'000 18'----------------0- ->      3'000 10'0000001000
  transition:      3'000 18'--0-0-----------1- ->      3'010 10'0100001000
  transition:      3'000 18'--0-10----------1- ->      3'111 10'1110001000
  transition:      3'000 18'--0-11----------1- ->      3'001 10'0010001000
  transition:      3'000 18'--1-------------1- ->      3'001 10'0010001000
  transition:      3'100 18'--------0-0------- ->      3'100 10'1000010000
  transition:      3'100 18'--------100------- ->      3'100 10'1000010000
  transition:      3'100 18'--------110------- ->      3'011 10'0110010000
  transition:      3'100 18'0---------10------ ->      3'010 10'0100010000
  transition:      3'100 18'0---------11------ ->      3'101 10'1010010000
  transition:      3'100 18'1-------0-1------- ->      3'100 10'1000010000
  transition:      3'100 18'1-------101------- ->      3'100 10'1000010000
  transition:      3'100 18'1-------111------- ->      3'011 10'0110010000
  transition:      3'010 18'------------0----- ->      3'010 10'0100000000
  transition:      3'010 18'------------1----- ->      3'000 10'0000000000
  transition:      3'110 18'-------------0--0- ->      3'110 10'1100000010
  transition:      3'110 18'-------------0--1- ->      3'010 10'0100000010
  transition:      3'110 18'-------------1---- ->      3'000 10'0000000010
  transition:      3'001 18'--00------------0- ->      3'000 10'0000000100
  transition:      3'001 18'--1---0---------0- ->      3'000 10'0000000100
  transition:      3'001 18'--1---1--------00- ->      3'000 10'0000000100
  transition:      3'001 18'--1---1--------10- ->      3'100 10'1000000100
  transition:      3'001 18'---1---0--------0- ->      3'000 10'0000000100
  transition:      3'001 18'---1---1--------0- ->      3'011 10'0110000100
  transition:      3'001 18'----------------10 ->      3'001 10'0010000100
  transition:      3'001 18'--00------------11 ->      3'010 10'0100000100
  transition:      3'001 18'-01-------------11 ->      3'001 10'0010000100
  transition:      3'001 18'-11-------------11 ->      3'010 10'0100000100
  transition:      3'001 18'---1------------11 ->      3'001 10'0010000100
  transition:      3'101 18'------------0----- ->      3'101 10'1010000001
  transition:      3'101 18'------------1----- ->      3'110 10'1100000001
  transition:      3'011 18'--------0-0------- ->      3'011 10'0111000000
  transition:      3'011 18'--------1-0---0--- ->      3'011 10'0111000000
  transition:      3'011 18'--------1-0---1--- ->      3'000 10'0001000000
  transition:      3'011 18'----------1------- ->      3'010 10'0101000000
  transition:      3'111 18'----------0------- ->      3'111 10'1110100000
  transition:      3'111 18'----------1------- ->      3'010 10'0100100000

9.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\usb0.state$1165' from module `\top'.
Optimizing FSM `$fsm$\usb0.recv.sm.state$1160' from module `\top'.

9.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 45 unused cells and 45 unused wires.
<suppressed ~46 debug messages>

9.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\usb0.recv.sm.state$1160' from module `\top'.
  Removing unused output signal $flatten\usb0.\recv.\sm.$0\state[1:0] [0].
  Removing unused output signal $flatten\usb0.\recv.\sm.$0\state[1:0] [1].
Optimizing FSM `$fsm$\usb0.state$1165' from module `\top'.
  Removing unused output signal $flatten\usb0.$0\state[2:0] [0].
  Removing unused output signal $flatten\usb0.$0\state[2:0] [1].
  Removing unused output signal $flatten\usb0.$0\state[2:0] [2].

9.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\usb0.recv.sm.state$1160' from module `\top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> ---1
  10 -> --1-
  01 -> -1--
  11 -> 1---
Recoding FSM `$fsm$\usb0.state$1165' from module `\top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> -------1
  100 -> ------1-
  010 -> -----1--
  110 -> ----1---
  001 -> ---1----
  101 -> --1-----
  011 -> -1------
  111 -> 1-------

9.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\usb0.recv.sm.state$1160' from module `top':
-------------------------------------

  Information on FSM $fsm$\usb0.recv.sm.state$1160 (\usb0.recv.sm.state):

  Number of input signals:    5
  Number of output signals:   3
  Number of state bits:       4

  Input signals:
    0: \usb0.recv.se0
    1: \usb0.recv.strobe
    2: $flatten\usb0.\recv.\sm.$eq$usb_recv.v:90$91_Y
    3: $flatten\usb0.\recv.\sm.$logic_and$usb_recv.v:80$89_Y
    4: \usb0.recv.sm.next_shift [8]

  Output signals:
    0: $flatten\usb0.\recv.\sm.$procmux$1012_CMP
    1: $flatten\usb0.\recv.\sm.$procmux$1009_CMP
    2: \usb0.recv.sm.xpacket

  State encoding:
    0:     4'---1  <RESET STATE>
    1:     4'--1-
    2:     4'-1--
    3:     4'1---

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 5'---0-   ->     0 3'001
      1:     0 5'-0-1-   ->     0 3'001
      2:     0 5'-1-1-   ->     2 3'001
      3:     1 5'---11   ->     0 3'000
      4:     1 5'---10   ->     1 3'000
      5:     1 5'---0-   ->     1 3'000
      6:     2 5'---11   ->     0 3'010
      7:     2 5'1-010   ->     1 3'010
      8:     2 5'0--10   ->     2 3'010
      9:     2 5'---0-   ->     2 3'010
     10:     2 5'1-110   ->     3 3'010
     11:     3 5'---11   ->     0 3'100
     12:     3 5'---10   ->     3 3'100
     13:     3 5'---0-   ->     3 3'100

-------------------------------------

FSM `$fsm$\usb0.state$1165' from module `top':
-------------------------------------

  Information on FSM $fsm$\usb0.state$1165 (\usb0.state):

  Number of input signals:   18
  Number of output signals:   7
  Number of state bits:       8

  Input signals:
    0: \usb0.recv.xdatastrobe
    1: \usb0.recv.sm.xpacket
    2: $flatten\usb0.$procmux$806_CMP
    3: $flatten\usb0.$procmux$756_CMP
    4: $flatten\usb0.$logic_and$usb.v:287$231_Y
    5: $flatten\usb0.$logic_and$usb.v:276$227_Y
    6: $flatten\usb0.$eq$usb.v:258$224_Y
    7: $flatten\usb0.$logic_and$usb.v:256$222_Y
    8: $flatten\usb0.$logic_and$usb.v:247$220_Y
    9: $flatten\usb0.$logic_and$usb.v:246$217_Y
   10: $flatten\usb0.$logic_and$usb.v:215$208_Y
   11: $flatten\usb0.$logic_and$usb.v:188$207_Y
   12: $flatten\usb0.$eq$usb.v:176$200_Y
   13: $flatten\usb0.$logic_and$usb.v:174$199_Y
   14: $flatten\usb0.$eq$usb.v:174$196_Y
   15: $flatten\usb0.$eq$usb.v:171$195_Y
   16: \usb0.recv_queue_1_valid
   17: \usb0.data_in_valid

  Output signals:
    0: \usb0.tx.send_crc16
    1: $flatten\usb0.$procmux$701_CMP
    2: $flatten\usb0.$procmux$660_CMP
    3: $flatten\usb0.$procmux$641_CMP
    4: $flatten\usb0.$procmux$566_CMP
    5: $flatten\usb0.$procmux$555_CMP
    6: $flatten\usb0.$procmux$550_CMP

  State encoding:
    0: 8'-------1  <RESET STATE>
    1: 8'------1-
    2: 8'-----1--
    3: 8'----1---
    4: 8'---1----
    5: 8'--1-----
    6: 8'-1------
    7: 8'1-------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 18'----------------0-   ->     0 7'0001000
      1:     0 18'--0-0-----------1-   ->     2 7'0001000
      2:     0 18'--0-11----------1-   ->     4 7'0001000
      3:     0 18'--1-------------1-   ->     4 7'0001000
      4:     0 18'--0-10----------1-   ->     7 7'0001000
      5:     1 18'--------100-------   ->     1 7'0010000
      6:     1 18'--------0-0-------   ->     1 7'0010000
      7:     1 18'1-------101-------   ->     1 7'0010000
      8:     1 18'1-------0-1-------   ->     1 7'0010000
      9:     1 18'0---------10------   ->     2 7'0010000
     10:     1 18'0---------11------   ->     5 7'0010000
     11:     1 18'--------110-------   ->     6 7'0010000
     12:     1 18'1-------111-------   ->     6 7'0010000
     13:     2 18'------------1-----   ->     0 7'0000000
     14:     2 18'------------0-----   ->     2 7'0000000
     15:     3 18'-------------1----   ->     0 7'0000010
     16:     3 18'-------------0--1-   ->     2 7'0000010
     17:     3 18'-------------0--0-   ->     3 7'0000010
     18:     4 18'--1---1--------00-   ->     0 7'0000100
     19:     4 18'---1---0--------0-   ->     0 7'0000100
     20:     4 18'--1---0---------0-   ->     0 7'0000100
     21:     4 18'--00------------0-   ->     0 7'0000100
     22:     4 18'--1---1--------10-   ->     1 7'0000100
     23:     4 18'--00------------11   ->     2 7'0000100
     24:     4 18'-11-------------11   ->     2 7'0000100
     25:     4 18'----------------10   ->     4 7'0000100
     26:     4 18'---1------------11   ->     4 7'0000100
     27:     4 18'-01-------------11   ->     4 7'0000100
     28:     4 18'---1---1--------0-   ->     6 7'0000100
     29:     5 18'------------1-----   ->     3 7'0000001
     30:     5 18'------------0-----   ->     5 7'0000001
     31:     6 18'--------1-0---1---   ->     0 7'1000000
     32:     6 18'----------1-------   ->     2 7'1000000
     33:     6 18'--------1-0---0---   ->     6 7'1000000
     34:     6 18'--------0-0-------   ->     6 7'1000000
     35:     7 18'----------1-------   ->     2 7'0100000
     36:     7 18'----------0-------   ->     7 7'0100000

-------------------------------------

9.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\usb0.recv.sm.state$1160' from module `\top'.
Mapping FSM `$fsm$\usb0.state$1165' from module `\top'.

9.13. Executing OPT pass (performing simple optimizations).

9.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~16 debug messages>

9.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

9.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~44 debug messages>

9.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

9.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

9.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\usb0.\tx.\tx_crc.$procdff$1129 ($adff) from module top (D = \usb0.tx.tx_crc.next, Q = \usb0.tx.tx_crc.r).
Adding EN signal on $flatten\usb0.\tx.$procdff$1135 ($adff) from module top (D = $flatten\usb0.\tx.$procmux$940_Y, Q = \usb0.tx.state).
Adding EN signal on $flatten\usb0.\tx.$procdff$1134 ($dff) from module top (D = $flatten\usb0.\tx.$procmux$928_Y, Q = \usb0.tx.crc_enabled).
Adding SRST signal on $auto$ff.cc:262:slice$1406 ($dffe) from module top (D = $flatten\usb0.\tx.$procmux$925_Y, Q = \usb0.tx.crc_enabled, rval = 1'0).
Adding EN signal on $flatten\usb0.\tx.$procdff$1133 ($dff) from module top (D = $flatten\usb0.\tx.$procmux$936_Y, Q = \usb0.tx.tx_data).
Adding SRST signal on $auto$ff.cc:262:slice$1412 ($dffe) from module top (D = $flatten\usb0.\tx.$procmux$933_Y, Q = \usb0.tx.tx_data, rval = 9'110000000).
Adding EN signal on $flatten\usb0.\tx.$procdff$1132 ($adff) from module top (D = $flatten\usb0.\tx.$procmux$920_Y, Q = \usb0.tx.bit_stuff_counter).
Adding EN signal on $flatten\usb0.\tx.$procdff$1131 ($dff) from module top (D = $flatten\usb0.\tx.$ternary$usb_tx.v:126$144_Y, Q = \usb0.tx.last_j).
Adding SRST signal on $auto$ff.cc:262:slice$1415 ($dffe) from module top (D = \usb0.tx.j, Q = \usb0.tx.last_j, rval = 1'1).
Adding EN signal on $flatten\usb0.\recv.\sync_detect.$procdff$1125 ($adff) from module top (D = { \usb0.recv.sync_detect.data [5:0] $flatten\usb0.\recv.\sync_detect.$logic_or$usb_utils.v:134$179_Y }, Q = \usb0.recv.sync_detect.data).
Adding EN signal on $flatten\usb0.\recv.\sm.\crc5.$procdff$1130 ($adff) from module top (D = \usb0.recv.sm.crc5.next, Q = \usb0.recv.sm.crc5.r).
Adding EN signal on $flatten\usb0.\recv.\sm.\crc16.$procdff$1129 ($adff) from module top (D = \usb0.recv.sm.crc16.next, Q = \usb0.recv.sm.crc16.r).
Adding EN signal on $flatten\usb0.\recv.\sm.$procdff$1145 ($dff) from module top (D = \usb0.recv.sm.next_shift [7:0], Q = \usb0.recv.sm.shift_reg).
Adding EN signal on $flatten\usb0.\recv.\sm.$procdff$1143 ($adff) from module top (D = $flatten\usb0.\recv.\sm.$procmux$998_Y, Q = \usb0.recv.sm.clear_shift).
Adding EN signal on $flatten\usb0.\recv.\sm.$procdff$1142 ($adff) from module top (D = $flatten\usb0.\recv.\sm.$procmux$1021_Y, Q = \usb0.recv.sm.xcrc16_ok).
Adding EN signal on $flatten\usb0.\recv.\sm.$procdff$1141 ($adff) from module top (D = $flatten\usb0.\recv.\sm.$procmux$1041_Y, Q = \usb0.recv.sm.xcrc5_ok).
Adding EN signal on $flatten\usb0.\recv.\sm.$procdff$1140 ($adff) from module top (D = $flatten\usb0.\recv.\sm.$procmux$1061_Y, Q = \usb0.recv.sm.xdatastrobe).
Adding EN signal on $flatten\usb0.\recv.\sm.$procdff$1139 ($adff) from module top (D = { \usb0.recv.sm.next_shift [0] \usb0.recv.sm.next_shift [1] \usb0.recv.sm.next_shift [2] \usb0.recv.sm.next_shift [3] \usb0.recv.sm.next_shift [4] \usb0.recv.sm.next_shift [5] \usb0.recv.sm.next_shift [6] \usb0.recv.sm.next_shift [7] }, Q = \usb0.recv.sm.xdata).
Adding EN signal on $flatten\usb0.\recv.\sm.$procdff$1138 ($adff) from module top (D = { \usb0.recv.sm.next_shift [4] \usb0.recv.sm.next_shift [5] \usb0.recv.sm.next_shift [6] \usb0.recv.sm.next_shift [7] }, Q = \usb0.recv.sm.xpid).
Adding EN signal on $flatten\usb0.\recv.\nrzi_decoder.$procdff$1102 ($dff) from module top (D = \usb0.recv.clk_rcvr.i, Q = \usb0.recv.nrzi_decoder.prev_i).
Adding EN signal on $flatten\usb0.\recv.\destuffer.$procdff$1126 ($adff) from module top (D = { \usb0.recv.destuffer.data [5:0] \usb0.recv.destuffer.d }, Q = \usb0.recv.destuffer.data).
Adding SRST signal on $flatten\usb0.\recv.$procdff$1137 ($dff) from module top (D = $flatten\usb0.\recv.$procmux$964_Y, Q = \usb0.recv.short_idle_counter, rval = 3'111).
Adding EN signal on $auto$ff.cc:262:slice$1465 ($sdff) from module top (D = $flatten\usb0.\recv.$sub$usb_recv.v:166$98_Y, Q = \usb0.recv.short_idle_counter).
Adding SRST signal on $flatten\usb0.$procdff$1123 ($dff) from module top (D = $flatten\usb0.$procmux$870_Y, Q = \usb0.recv_queue_1_valid, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$1467 ($sdff) from module top (D = \usb0.recv_queue_0_valid, Q = \usb0.recv_queue_1_valid).
Adding SRST signal on $flatten\usb0.$procdff$1122 ($dff) from module top (D = $flatten\usb0.$procmux$875_Y, Q = \usb0.recv_queue_0_valid, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$1469 ($sdff) from module top (D = 1'1, Q = \usb0.recv_queue_0_valid).
Adding EN signal on $flatten\usb0.$procdff$1121 ($dff) from module top (D = \usb0.recv_queue_0, Q = \usb0.recv_queue_1).
Adding EN signal on $flatten\usb0.$procdff$1120 ($dff) from module top (D = \usb0.recv.sm.xdata, Q = \usb0.recv_queue_0).
Adding EN signal on $flatten\usb0.$procdff$1116 ($adff) from module top (D = $flatten\usb0.$procmux$667_Y, Q = \usb0.tx_enable_crc16).
Adding EN signal on $flatten\usb0.$procdff$1115 ($adff) from module top (D = $flatten\usb0.$0\tx_transmit[0:0], Q = \usb0.tx_transmit).
Adding EN signal on $flatten\usb0.$procdff$1113 ($adff) from module top (D = $flatten\usb0.$0\transaction_active[0:0], Q = \usb0.transaction_active).
Adding EN signal on $flatten\usb0.$procdff$1112 ($dff) from module top (D = $flatten\usb0.$0\tx_data[7:0], Q = \usb0.tx_data).

9.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 41 unused cells and 65 unused wires.
<suppressed ~42 debug messages>

9.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~5 debug messages>

9.13.9. Rerunning OPT passes. (Maybe there is more to do..)

9.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~30 debug messages>

9.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

9.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~36 debug messages>
Removed a total of 12 cells.

9.13.13. Executing OPT_DFF pass (perform DFF optimizations).

9.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 12 unused wires.
<suppressed ~1 debug messages>

9.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

9.13.16. Rerunning OPT passes. (Maybe there is more to do..)

9.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~31 debug messages>

9.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

9.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

9.13.20. Executing OPT_DFF pass (perform DFF optimizations).

9.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

9.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

9.13.23. Finished OPT passes. (There is nothing left to do.)

9.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 31 bits (of 32) from port B of cell top.$add$top.v:37$10 ($add).
Removed top 5 bits (of 32) from port Y of cell top.$add$top.v:37$10 ($add).
Removed top 2 bits (of 3) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$1303 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$1311 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$1291 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$1299 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$1207 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$1189 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$1518 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$1516 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$1503 ($ne).
Removed top 1 bits (of 4) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$1501 ($ne).
Removed top 1 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$1495 ($ne).
Removed top 1 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$1493 ($ne).
Removed top 2 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$1486 ($ne).
Removed top 1 bits (of 4) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$1484 ($ne).
Removed top 2 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$1482 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$1408 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$1403 ($ne).
Removed top 1 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$1382 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\usb0.\tx.$eq$usb_tx.v:48$113 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\usb0.\tx.$eq$usb_tx.v:48$114 ($eq).
Removed cell top.$flatten\usb0.\tx.$procmux$925 ($mux).
Removed cell top.$flatten\usb0.\tx.$procmux$944 ($mux).
Removed cell top.$flatten\usb0.\tx.$procmux$947 ($mux).
Removed cell top.$flatten\usb0.\tx.$procmux$953 ($mux).
Removed top 2 bits (of 3) from port B of cell top.$flatten\usb0.\tx.$procmux$955_CMP0 ($eq).
Removed cell top.$flatten\usb0.\tx.$procmux$956 ($mux).
Removed cell top.$flatten\usb0.\tx.$procmux$959 ($mux).
Removed top 1 bits (of 7) from port B of cell top.$flatten\usb0.\recv.\destuffer.$ne$usb_utils.v:105$168 ($ne).
Removed top 1 bits (of 7) from port B of cell top.$flatten\usb0.\recv.\sync_detect.$eq$usb_utils.v:128$172 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\usb0.\recv.\sm.\crc5.$eq$usb_utils.v:13$149 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\usb0.\recv.\d_filter.$procmux$538_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\usb0.\recv.\d_filter.$procmux$537_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\usb0.\recv.\d_filter.$procmux$536_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\usb0.\recv.\se0_filter.$procmux$529_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\usb0.\recv.\se0_filter.$procmux$528_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\usb0.\recv.\se0_filter.$procmux$527_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\usb0.\recv.\se0_filter.$procmux$526_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\usb0.\recv.\se0_filter.$procmux$525_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\usb0.\recv.\se0_filter.$procmux$524_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\usb0.\recv.\se0_filter.$procmux$523_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\usb0.\recv.\se0_filter.$procmux$522_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\usb0.\recv.\se0_filter.$procmux$521_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\usb0.\recv.\se0_filter.$procmux$520_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\usb0.\recv.\se0_filter.$procmux$519_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\usb0.\recv.\se0_filter.$procmux$518_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\usb0.\recv.\se0_filter.$procmux$517_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\usb0.\recv.\se0_filter.$procmux$516_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\usb0.\recv.\se0_filter.$procmux$515_CMP0 ($eq).
Removed top 1 bits (of 8) from FF cell top.$auto$ff.cc:262:slice$1471 ($dffe).
Removed top 2 bits (of 5) from mux cell top.$flatten\usb0.\recv.\sm.\crc5.$procmux$915 ($mux).
Removed cell top.$flatten\usb0.\recv.\sm.$procmux$1039 ($mux).
Removed cell top.$flatten\usb0.\recv.\sm.$procmux$1036 ($mux).
Removed cell top.$flatten\usb0.\recv.\sm.$procmux$1030 ($mux).
Removed cell top.$flatten\usb0.\recv.\sm.$procmux$1027 ($mux).
Removed cell top.$flatten\usb0.\recv.\sm.$procmux$1025 ($mux).
Removed cell top.$flatten\usb0.\recv.\sm.$procmux$1019 ($mux).
Removed cell top.$flatten\usb0.\recv.\sm.$procmux$1016 ($mux).
Removed cell top.$flatten\usb0.\recv.\sm.$procmux$1010 ($mux).
Removed cell top.$flatten\usb0.\recv.\sm.$procmux$1007 ($mux).
Removed cell top.$flatten\usb0.\recv.\sm.$procmux$1002 ($mux).
Removed cell top.$flatten\usb0.\recv.\sm.$procmux$996 ($mux).
Removed top 1 bits (of 8) from FF cell top.$auto$ff.cc:262:slice$1474 ($dffe).
Removed top 1 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$1339 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\usb0.$procmux$756_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$1343 ($eq).
Removed cell top.$flatten\usb0.$procmux$735 ($mux).
Removed cell top.$flatten\usb0.$procmux$731 ($mux).
Removed cell top.$flatten\usb0.$procmux$723 ($mux).
Removed cell top.$flatten\usb0.$procmux$720 ($mux).
Removed cell top.$flatten\usb0.$procmux$718 ($mux).
Removed cell top.$flatten\usb0.$procmux$709 ($mux).
Removed cell top.$flatten\usb0.$procmux$707 ($mux).
Removed cell top.$flatten\usb0.$procmux$705 ($mux).
Removed cell top.$flatten\usb0.$procmux$699 ($mux).
Removed cell top.$flatten\usb0.$procmux$697 ($mux).
Removed top 1 bits (of 3) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$1356 ($eq).
Removed cell top.$flatten\usb0.$procmux$619 ($mux).
Removed cell top.$flatten\usb0.$procmux$551 ($mux).
Removed cell top.$flatten\usb0.$procmux$545 ($mux).
Removed cell top.$flatten\usb0.$procmux$541 ($mux).
Removed top 2 bits (of 4) from port B of cell top.$flatten\usb0.$eq$usb.v:282$228 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\usb0.$ne$usb.v:247$219 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$flatten\usb0.$ne$usb.v:188$206 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$flatten\usb0.$eq$usb.v:171$195 ($eq).
Removed top 1 bits (of 8) from FF cell top.$auto$ff.cc:262:slice$1453 ($adffe).

9.15. Executing PEEPOPT pass (run peephole optimizers).

9.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 15 unused cells and 47 unused wires.
<suppressed ~17 debug messages>

9.17. Executing SHARE pass (SAT-based resource sharing).

9.18. Executing TECHMAP pass (map to technology primitives).

9.18.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

9.18.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

9.19. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

9.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

9.21. Executing TECHMAP pass (map to technology primitives).

9.21.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

9.21.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/dsp_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__MUL18X18'.
Successfully finished Verilog frontend.

9.21.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

9.22. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $add$top.v:37$10 ($add).
  creating $macc model for $flatten\usb0.$sub$usb.v:153$192 ($sub).
  creating $macc model for $flatten\usb0.\recv.$sub$usb_recv.v:166$98 ($sub).
  creating $macc model for $flatten\usb0.\recv.\clk_rcvr.$sub$usb_utils.v:86$167 ($sub).
  creating $macc model for $flatten\usb0.\tx.$add$usb_tx.v:118$134 ($add).
  creating $macc model for $flatten\usb0.\tx.$add$usb_tx.v:22$103 ($add).
  creating $alu model for $macc $flatten\usb0.\tx.$add$usb_tx.v:22$103.
  creating $alu model for $macc $flatten\usb0.\tx.$add$usb_tx.v:118$134.
  creating $alu model for $macc $flatten\usb0.\recv.\clk_rcvr.$sub$usb_utils.v:86$167.
  creating $alu model for $macc $flatten\usb0.\recv.$sub$usb_recv.v:166$98.
  creating $alu model for $macc $flatten\usb0.$sub$usb.v:153$192.
  creating $alu model for $macc $add$top.v:37$10.
  creating $alu cell for $add$top.v:37$10: $auto$alumacc.cc:485:replace_alu$1522
  creating $alu cell for $flatten\usb0.$sub$usb.v:153$192: $auto$alumacc.cc:485:replace_alu$1525
  creating $alu cell for $flatten\usb0.\recv.$sub$usb_recv.v:166$98: $auto$alumacc.cc:485:replace_alu$1528
  creating $alu cell for $flatten\usb0.\recv.\clk_rcvr.$sub$usb_utils.v:86$167: $auto$alumacc.cc:485:replace_alu$1531
  creating $alu cell for $flatten\usb0.\tx.$add$usb_tx.v:118$134: $auto$alumacc.cc:485:replace_alu$1534
  creating $alu cell for $flatten\usb0.\tx.$add$usb_tx.v:22$103: $auto$alumacc.cc:485:replace_alu$1537
  created 6 $alu and 0 $macc cells.

9.23. Executing OPT pass (performing simple optimizations).

9.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

9.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

9.23.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~27 debug messages>

9.23.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\usb0.\tx.$procmux$940: { $auto$opt_reduce.cc:134:opt_pmux$1541 $flatten\usb0.\tx.$procmux$955_CMP $flatten\usb0.\tx.$eq$usb_tx.v:45$107_Y $flatten\usb0.\tx.$eq$usb_tx.v:45$108_Y $flatten\usb0.\tx.$eq$usb_tx.v:48$113_Y $flatten\usb0.\tx.$eq$usb_tx.v:48$114_Y $flatten\usb0.\tx.$eq$usb_tx.v:123$136_Y }
  Optimizing cells in module \top.
Performed a total of 1 changes.

9.23.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

9.23.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\usb0.$procdff$1118 ($adff) from module top (D = $flatten\usb0.$0\handshake_latch[1:0], Q = \usb0.handshake_latch).

9.23.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

9.23.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

9.23.9. Rerunning OPT passes. (Maybe there is more to do..)

9.23.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~27 debug messages>

9.23.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\usb0.$procmux$549: { \usb0.state [1] $auto$opt_reduce.cc:134:opt_pmux$1558 }
    New ctrl vector for $pmux cell $flatten\usb0.\recv.\sm.$procmux$998: { \usb0.recv.sm.state [0] $auto$opt_reduce.cc:134:opt_pmux$1560 }
  Optimizing cells in module \top.
Performed a total of 2 changes.

9.23.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

9.23.13. Executing OPT_DFF pass (perform DFF optimizations).

9.23.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

9.23.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

9.23.16. Rerunning OPT passes. (Maybe there is more to do..)

9.23.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~27 debug messages>

9.23.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

9.23.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

9.23.20. Executing OPT_DFF pass (perform DFF optimizations).

9.23.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

9.23.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

9.23.23. Finished OPT passes. (There is nothing left to do.)

9.24. Executing MEMORY pass.

9.24.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

9.24.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

9.24.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

9.24.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

9.24.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

9.24.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

9.24.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

9.24.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

9.24.9. Executing MEMORY_COLLECT pass (generating $mem cells).

9.25. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

9.26. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

9.27. Executing TECHMAP pass (map to technology primitives).

9.27.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ECP5_DP16KD'.
Generating RTLIL representation for module `\$__ECP5_PDPW16KD'.
Successfully finished Verilog frontend.

9.27.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

9.28. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

9.29. Executing TECHMAP pass (map to technology primitives).

9.29.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/lutrams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/lutrams_map.v' to AST representation.
Generating RTLIL representation for module `\$__TRELLIS_DPR16X4'.
Successfully finished Verilog frontend.

9.29.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

9.30. Executing OPT pass (performing simple optimizations).

9.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~57 debug messages>

9.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

9.30.3. Executing OPT_DFF pass (perform DFF optimizations).
Handling always-active ARST on $flatten\usb0.\tx.$procdff$1136 ($adff) from module top (changing to const driver).
Handling always-active ARST on $auto$ff.cc:262:slice$1391 ($adffe) from module top (changing to const driver).
Handling always-active ARST on $auto$ff.cc:262:slice$1464 ($adffe) from module top (changing to const driver).
Handling always-active ARST on $flatten\usb0.\recv.\clk_rcvr.$procdff$1128 ($adff) from module top (changing to const driver).
Handling always-active ARST on $flatten\usb0.\recv.\clk_rcvr.$procdff$1127 ($adff) from module top (changing to const driver).
Handling always-active ARST on $auto$ff.cc:262:slice$1414 ($adffe) from module top (changing to const driver).
Handling always-active ARST on $auto$ff.cc:262:slice$1417 ($adffe) from module top (changing to const driver).
Handling always-active ARST on $auto$ff.cc:262:slice$1419 ($adffe) from module top (changing to const driver).
Handling always-active ARST on $auto$ff.cc:262:slice$1418 ($adffe) from module top (changing to const driver).
Handling always-active ARST on $auto$ff.cc:262:slice$1437 ($adffe) from module top (changing to const driver).
Handling always-active ARST on $auto$ff.cc:262:slice$1422 ($adffe) from module top (changing to const driver).
Handling always-active ARST on $auto$ff.cc:262:slice$1421 ($adffe) from module top (changing to const driver).
Handling always-active ARST on $auto$ff.cc:262:slice$1453 ($adffe) from module top (changing to const driver).
Handling always-active ARST on $auto$ff.cc:262:slice$1452 ($adffe) from module top (changing to const driver).
Handling always-active ARST on $flatten\usb0.$procdff$1117 ($adff) from module top (changing to const driver).
Handling always-active ARST on $auto$ff.cc:262:slice$1390 ($adffe) from module top (changing to const driver).
Handling always-active ARST on $auto$ff.cc:262:slice$1458 ($adffe) from module top (changing to const driver).
Handling always-active ARST on $auto$fsm_map.cc:172:map_fsm$1233 ($adff) from module top (changing to const driver).
Handling always-active ARST on $auto$fsm_map.cc:172:map_fsm$1175 ($adff) from module top (changing to const driver).
Handling always-active ARST on $auto$ff.cc:262:slice$1542 ($adffe) from module top (changing to const driver).
Handling never-active EN on $auto$ff.cc:262:slice$1510 ($dffe) from module top (removing D path).
Handling always-active ARST on $auto$ff.cc:262:slice$1480 ($adffe) from module top (changing to const driver).
Handling always-active ARST on $auto$ff.cc:262:slice$1477 ($adffe) from module top (changing to const driver).

9.30.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 291 unused cells and 340 unused wires.
<suppressed ~347 debug messages>

9.30.5. Rerunning OPT passes. (Removed registers in this run.)

9.30.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~41 debug messages>

9.30.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

9.30.8. Executing OPT_DFF pass (perform DFF optimizations).
Handling always-active SRST on $auto$ff.cc:262:slice$1413 ($sdffce) from module top (changing to const D).
Removing always-active EN on $auto$ff.cc:262:slice$1413 ($sdffce) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$1416 ($sdffce) from module top (changing to const D).
Removing always-active EN on $auto$ff.cc:262:slice$1416 ($sdffce) from module top.
Setting constant 1-bit at position 0 on $auto$ff.cc:262:slice$1416 ($dff) from module top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$1413 ($dff) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$1413 ($dff) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$1413 ($dff) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$1413 ($dff) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$1413 ($dff) from module top.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$1413 ($dff) from module top.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$1413 ($dff) from module top.
Setting constant 1-bit at position 7 on $auto$ff.cc:262:slice$1413 ($dff) from module top.
Setting constant 1-bit at position 8 on $auto$ff.cc:262:slice$1413 ($dff) from module top.

9.30.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 5 unused cells and 19 unused wires.
<suppressed ~7 debug messages>

9.30.10. Rerunning OPT passes. (Removed registers in this run.)

9.30.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

9.30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

9.30.13. Executing OPT_DFF pass (perform DFF optimizations).

9.30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

9.30.15. Finished fast OPT passes.

9.31. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

9.32. Executing OPT pass (performing simple optimizations).

9.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

9.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

9.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

9.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

9.32.6. Executing OPT_DFF pass (perform DFF optimizations).

9.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

9.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

9.32.9. Finished OPT passes. (There is nothing left to do.)

9.33. Executing TECHMAP pass (map to technology primitives).

9.33.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

9.33.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ecp5_alu'.
Successfully finished Verilog frontend.

9.33.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $tribuf.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $dff.
Using template $paramod$956e79e8f8c5e64be7438155ae50a966e615cb04\_80_ecp5_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $logic_or.
No more expansions possible.
<suppressed ~159 debug messages>

9.34. Executing OPT pass (performing simple optimizations).

9.34.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~100 debug messages>

9.34.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

9.34.3. Executing OPT_DFF pass (perform DFF optimizations).

9.34.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 41 unused cells and 79 unused wires.
<suppressed ~42 debug messages>

9.34.5. Finished fast OPT passes.

9.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

9.36. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

9.37. Executing TECHMAP pass (map to technology primitives).

9.37.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\$_ALDFF_NP_'.
Generating RTLIL representation for module `\$_ALDFF_PP_'.
Generating RTLIL representation for module `\$_ALDFFE_NPN_'.
Generating RTLIL representation for module `\$_ALDFFE_NPP_'.
Generating RTLIL representation for module `\$_ALDFFE_PPN_'.
Generating RTLIL representation for module `\$_ALDFFE_PPP_'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Successfully finished Verilog frontend.

9.37.2. Continuing TECHMAP pass.
Using template $paramod\$_DFF_P_\_TECHMAP_WIREINIT_Q_=1'1 for cells of type $_DFF_P_.
Using template $paramod\$_DFF_P_\_TECHMAP_WIREINIT_Q_=1'0 for cells of type $_DFF_P_.
No more expansions possible.
<suppressed ~120 debug messages>

9.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

9.39. Executing SIMPLEMAP pass (map simple cells to gate primitives).

9.40. Executing ECP5_GSR pass (implement FF init values).
Handling GSR in top.

9.41. Executing ATTRMVCP pass (move or copy attributes).

9.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 108 unused wires.
<suppressed ~1 debug messages>

9.43. Executing TECHMAP pass (map to technology primitives).

9.43.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

9.43.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

9.44. Executing ABC pass (technology mapping using ABC).

9.44.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs.

9.44.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + dress 
ABC: Total number of equiv classes                =       2.
ABC: Participating nodes from both networks       =       2.
ABC: Participating nodes from the first network   =       1. (  50.00 % of nodes)
ABC: Participating nodes from the second network  =       1. (  50.00 % of nodes)
ABC: Node pairs (any polarity)                    =       1. (  50.00 % of names can be moved)
ABC: Node pairs (same polarity)                   =       1. (  50.00 % of names can be moved)
ABC: Total runtime =     0.00 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

9.44.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:        1
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        1
ABC RESULTS:          output signals:        1
Removing temp directory.
Removed 0 unused cells and 2 unused wires.

9.45. Executing TECHMAP pass (map to technology primitives).

9.45.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\$_ALDFF_NP_'.
Generating RTLIL representation for module `\$_ALDFF_PP_'.
Generating RTLIL representation for module `\$_ALDFFE_NPN_'.
Generating RTLIL representation for module `\$_ALDFFE_NPP_'.
Generating RTLIL representation for module `\$_ALDFFE_PPN_'.
Generating RTLIL representation for module `\$_ALDFFE_PPP_'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

9.45.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
No more expansions possible.
<suppressed ~86 debug messages>

9.46. Executing OPT_LUT_INS pass (discard unused LUT inputs).
Optimizing LUTs in top.
Removed 0 unused cells and 2 unused wires.

9.47. Executing AUTONAME pass.
Renamed 58 objects in module top (4 iterations).
<suppressed ~45 debug messages>

9.48. Executing HIERARCHY pass (managing design hierarchy).

9.48.1. Analyzing design hierarchy..
Top module:  \top

9.48.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

9.49. Printing statistics.

=== top ===

   Number of wires:                113
   Number of wire bits:            345
   Number of public wires:         113
   Number of public wire bits:     345
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 43
     $_TBUF_                         2
     CCU2C                          13
     LUT4                            1
     TRELLIS_FF                     27

9.50. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

10. Executing JSON backend.

Warnings: 22 unique messages, 22 total
End of script. Logfile hash: fc2bf4493b, CPU: user 1.22s system 0.06s, MEM: 265.79 MB peak
Yosys 0.16+61 (git sha1 UNKNOWN, clang 14.0.0-1ubuntu1 -fPIC -Os)
Time spent: 47% 29x read_verilog (0 sec), 12% 22x opt_expr (0 sec), ...
nextpnr-ecp5 --json usbTim.json --textcfg usbTim_out.config --25k --package CSFBGA285 --lpf ../orangecrab_r0.2.pcf
rm usbTim.ys usbTim.json
